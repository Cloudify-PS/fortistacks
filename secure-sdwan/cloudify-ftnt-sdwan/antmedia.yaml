tosca_definitions_version: cloudify_dsl_1_3

description: >
  Deployment of Antmedia and SDWAN rules to fortimanager.
  $ cfy secret create agent_key_private -f ../../cloudify/cloudify-key
  $ cfy secret create agent_key_public -f ../../cloudify/cloudify-key.pub

imports:
  - http://www.getcloudify.org/spec/cloudify/4.0/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-diamond-plugin
  - plugin:cloudify-utilities-plugin
  - types/antmedia.yaml
  - types/openstack-types.yaml

inputs:
  fos_image:
    default: {}
  fos_flavor:
    default: {}
  key_name:
    default: {}
  ub_image:
     default: {}  
  ub_flavor:
     default: {}
  agent_user:
      default: "ubuntu"

  mgmt_network_name:
    default: "mgmt"
  external_network_name:
    default: "ext_net"



dsl_definitions:

# The configuration of openstack access is in the file /etc/cloudify/openstack_config.json
# For simplicity of blueprint reading.

#  ##openstack_config: &openstack_config
#    username: { get_secret: keystone_username }
#    password: { get_secret: keystone_password }
#    tenant_name: { get_secret: keystone_tenant_name }
#    auth_url: { get_secret: keystone_url }
#    region: { get_secret: region }

node_templates:

dc_ubuntu:
    type: cloudify.openstack.nodes.Server
    properties:
      server:
        image_name: { get_input: ub_image }
        flavor_name: { get_input: ub_flavor }
        key_name: { get_input: key_name }
      agent_config:
        install_method: init_script
        user: { get_input: agent_user }
        port: 22
        key: { get_secret: agent_key_private }
          #network: mgmt_network
            ##
      ##openstack_config: *openstack_config
      management_network_name: { get_input: mgmt_network_name }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              userdata: |
                #cloud-config
                chpasswd:
                  list: |
                    ubuntu:fortinet
                  expire: False
                write_files:
                  - content: |
                      # Enable dhcp on ens4
                      auto ens4
                      iface ens4 inet dhcp
                    path: /etc/network/interfaces.d/51-ens4.cfg
                package_upgrade: true
                packages:
                  - python-pip
                  - tcpdump
                  - zile
                power_state:
                 delay: "now"
                 mode: reboot
                 message: Rebooting to ensure network conf
                 timeout: 10
                 condition: True
    relationships:
      - target: dc_network
        type: cloudify.relationships.depends_on
      - target: dc_subnet
        type: cloudify.relationships.connected_to
      - target: antmedia_floating_ip
        type: cloudify.relationships.connected_to

  antmedia_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              floating_network_name: { get_input: external_network_name }

  antmedia:
    type: cloudify.nodes.MonitoredAntmedia
    relationships:
      - target: dc_ubuntu
        type: cloudify.relationships.contained_in

#todo: adapt to antmedia protocols
  antmedia_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: cfy_security_group_openstack
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 8005
        - remote_ip_prefix: 0.0.0.0/0
          port: 22
        - remote_ip_prefix: 0.0.0.0/0
          port: 80
        - remote_ip_prefix: 0.0.0.0/0
          port: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          port_range_max: null
          port_range_min: null



