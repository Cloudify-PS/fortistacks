heat_template_version: 2016-04-08
## cli deploy $ openstack stack create --template heat-ha-poc.yaml mini-poc-fgcp -e env.yaml
# in ha mode dhcp is disabled (totally)
# must provide fixed IP port

description: >
  HOT template to create 3 neutron networks, 2 generic VMs a 2 Fortigate VM
  in between and floating ip for everyone.
  Used for HA setup debugging.

parameters:
 fgtimage:
  type: string
  description: Fortios image
  default: "fgt56"
 ubimage:
  type: string
  description: Ubuntu image
  default: "Trusty x86_64"
 mgmt_net:
  type: string
  description: Management network
  default: "mgmt"
 public_net:
  type: string
  description: External network for floating ips
  default: "ext_net"
 vms_flavor:
  type: string
  description: Flavor of the VMs
  default: "m1.small"
 ub_nic2_name:
  type: string
  description: Name of the second interface on Ubuntu may vary
  default: "eth1"
 fgta_license:
  type: string
  default: |
       -----BEGIN FGT VM LICENSE-----
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdE
       -----END FGT VM LICENSE-----
 fgtb_license:
  type: string
  default: |
       -----BEGIN FGT VM LICENSE-----
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdE
       -----END FGT VM LICENSE-----
 ssh-key-name:
  type: string
  default: "default"

resources:
 left_net:
    type: OS::Neutron::Net
    properties:
      name: "left"

 left_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: left_net }
      cidr: "10.40.40.0/24"
      allocation_pools:
        - start: "10.40.40.3"
          end:  "10.40.40.250"
      host_routes: [{"nexthop": "10.40.40.254", "destination": "10.20.20.0/24"}]
 
 right_net:
    type: OS::Neutron::Net
    properties:
      name: "right"

 right_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: right_net }
      cidr: "10.20.20.0/24"
      allocation_pools:
        - start: "10.20.20.3"
          end:  "10.20.20.250"
 hasync_net:
    type: OS::Neutron::Net
    properties:
      name: "hasync"

 hasync_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: hasync_net }
      cidr: "172.27.0.0/24"
      allocation_pools:
        - start: "172.27.0.3"
          end:  "172.27.0.250"
#      dns: "8.8.8.8"

 fgta_left_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: left_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "10.40.40.254"

 fgta_right_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: right_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "10.20.20.254"

 fgta_hb_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: hasync_net  }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "172.27.0.40"

 fgta_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: mgmt_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "192.168.1.254"

 fgtb_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: mgmt_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "192.168.1.253"

 fgta_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

 fgtb_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

 fgtb_left_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: left_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "10.40.40.253"

 fgtb_right_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: right_net }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "10.20.20.253"

 fgtb_hb_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: hasync_net  }
      port_security_enabled: false
      fixed_ips:
        - ip_address: "172.27.0.41"

 fgta_config:
   type: OS::Heat::SoftwareConfig
   properties:
     group: ungrouped
     config: |
         config system admin
          edit "admin"
          set password fortinet
         end
         config system interface
          edit port1
          set mode static
          set ip 192.168.1.252/24
          set management-ip 192.168.1.254/24
          set allowaccess ping https ssh http snmp fgfm
         next
          edit port2
          set mode static
          set allowaccess ping
          set ip 10.40.40.254/24
         next
          edit port3
          set mode static
          set allowaccess ping
          set ip 10.20.20.254/24
         next
          edit port4
           set mode static
           set allowaccess ping
           set ip 172.27.0.40/24
           set defaultgw enable
         next
         end
         config router static
         edit 1
         set gateway 10.40.40.1
         set device port2
         next
          edit 2
            set dst 0.0.0.0/0
            set gateway 192.168.1.1
            set device port1
         next

         config system dns
         set primary 8.8.8.8
         end
         config firewall policy
         edit 1
         set name "Allow any any"
         set srcintf "port2"
         set dstintf "port3"
         set srcaddr "all"
         set dstaddr "all"
         set action accept
         set schedule "always"
         set service "ALL"
         set nat enable
         next
         end
          config system link-monitor
              edit "ha-link-monitor"
                  set srcintf "port2"
                  set server "10.40.40.1"
                  set failtime 2
                  set ha-priority 5
              next
          end

         config system ha
            set group-id 12
            set group-name "ClusterAB"
            set mode a-p
            set password "ClusterABnotsecret"
            set override disable
            set hbdev port4 50
            set session-sync-dev port4
            set session-pickup enable
            set monitor "port2" "port3"
            set pingserver-monitor-interface "port2"
             set unicast-hb enable
             set unicast-hb-peerip 172.27.0.41
          end


 fgta_license_file:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config:  {get_param: fgta_license}

 fgtb_config:
   type: OS::Heat::SoftwareConfig
   properties:
     group: ungrouped
     config: |
      config system admin
          edit "admin"
          set password fortinet
         end
         config system interface
          edit port1
          set mode static
           set ip 192.168.1.252/24
           set management-ip 192.168.1.253/24
           set allowaccess ping https ssh snmp fgfm radius-acct capwap ftm
          next
          edit port2
          set mode static
          set allowaccess ping
          set ip 10.40.40.254/24
         next
          edit port3
          set mode static
          set allowaccess ping
          set ip 10.20.20.254/24
         next
         edit port4
           set mode static
           set allowaccess ping
           set ip 172.27.0.41/24
           set defaultgw disable
         next
         end
         config router static
           edit 1
           set gateway 10.40.40.1
           set device port2
           next
           edit 2
            set dst 0.0.0.0/0
            set gateway 192.168.1.1
            set device port1
         next
         end
         config system dns
         set primary 8.8.8.8
         end
         config firewall policy
         edit 1
         set name "Allow any any"
         set srcintf "any"
         set dstintf "any"
         set srcaddr "all"
         set dstaddr "all"
         set action accept
         set schedule "always"
         set service "ALL"
         set nat enable
         next
         end
          config system link-monitor
              edit "ha-link-monitor"
                  set srcintf "port2"
                  set server "10.40.40.1"
                  set failtime 2
                  set ha-priority 5
              next
          end

         config system ha
            set group-id 12
            set group-name "ClusterAB"
            set mode a-p
            set password "ClusterABnotsecret"
            set override disable
            set hbdev port4 50
            set session-sync-dev port4
            set session-pickup enable
            set monitor "port2" "port3"
              set pingserver-monitor-interface "port2"
             set unicast-hb enable
             set unicast-hb-peerip 172.27.0.40
          end

 fgtb_license_file:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config:  {get_param: fgtb_license}


 fgta_init:
  type: OS::Heat::MultipartMime
  properties:
    parts:
     - config: {get_resource: fgta_license_file}
     - config: {get_resource: fgta_config}

 fgtb_init:
  type: OS::Heat::MultipartMime
  properties:
    parts:
     - config: {get_resource: fgtb_license_file}
     - config: {get_resource: fgtb_config}


 fgta:
  type: OS::Nova::Server
  properties:
   key_name: { get_param: ssh-key-name }
   image: { get_param: fgtimage }
   flavor: { get_param: vms_flavor }
   user_data_format: RAW
   user_data: { get_resource: fgta_init }
   name: FGTA
   networks:
    - port: { get_resource: fgta_mgmt_port }
    - port:  { get_resource: fgta_left_port }
    - port:  { get_resource: fgta_right_port }
    - port:  { get_resource: fgta_hb_port }

 fgtb:
  type: OS::Nova::Server
  properties:
   key_name: { get_param: ssh-key-name }
   image: { get_param: fgtimage }
   flavor: { get_param: vms_flavor }
   user_data_format: RAW
   user_data: { get_resource: fgtb_init }
   name: FGTB
   networks:
    - port: { get_resource: fgtb_mgmt_port }
    - port:  { get_resource: fgtb_left_port }
    - port:  { get_resource: fgtb_right_port }
    - port:  { get_resource: fgtb_hb_port }
#    - port:  { get_resource: right_port }

 association_fgta:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: fgta_floating_ip }
      server_id: { get_resource: fgta }
      
 association_fgtb:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: fgtb_floating_ip }
      server_id: { get_resource: fgtb }

# association:
#   type: OS::Neutron::FloatingIPAssociation
#   properties:
#     floatingip_id: { get_resource: floating_ip }
#     port_id: {get_attr: [fgt, addresses, {get_param: net}, 0, port]}

 ubr_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

 ubl_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

 ub_config:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config:
      str_replace:
        template: |
           #cloud-config for citycloud using new schema ens
           chpasswd:
             list: |
               ubuntu:fortinet
             expire: False
           write_files:
             - content: |
                 # Enable dhcp on ens4 some use the new schema
                 auto $nic2
                 iface $nic2 inet dhcp
                 metric 100
                 post-up route del default dev $nic2
               path: /etc/network/interfaces.d/51-$nic2.cfg
           package_upgrade: true
           package_reboot_if_required: true
           packages:
             - apache2-utils
             - apache2
             - tcpdump
             - iperf3
           power_state:
             mode: reboot
             message: Rebooting to ensure network conf
             timeout: 10
             condition: True
        params:
          $nic2:  { get_param: ub_nic2_name }

 ubleft:
  type: OS::Nova::Server
  properties:
   image: { get_param: ubimage }
   flavor: { get_param: vms_flavor }
   key_name: { get_param: ssh-key-name }
   user_data_format: RAW
   user_data: { get_resource: ub_config }
   name: trafleft
   security_groups: [ default ]
   networks:
    - network: { get_param: mgmt_net }
    - subnet:  { get_resource: left_subnet }

 association_left:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: ubl_floating_ip }
      server_id: { get_resource: ubleft }

 ubright:
  type: OS::Nova::Server
  properties:
   image: { get_param: ubimage }
   flavor: { get_param: vms_flavor }
   key_name: { get_param: ssh-key-name }
   user_data_format: RAW
   user_data: { get_resource: ub_config }
   name: trafright
   security_groups: [ default ]
   networks:
    - network: { get_param: mgmt_net }
    - subnet:  { get_resource: right_subnet }


 association_right:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: ubr_floating_ip }
      server_id: { get_resource: ubright }

      
outputs:
 fgta-info:
    description: IP address to access of the FGTA
    value: { get_attr: [ fgta_floating_ip,  floating_ip_address ] }
 fgtabinfo:
    description: IP address to access of the FGTB
    value: { get_attr: [ fgtb_floating_ip,  floating_ip_address ] }
 left-info:
    description: IP address to access left ubuntu machine 
    value: { get_attr: [ ubl_floating_ip,  floating_ip_address ] }
 right-info:
    description: IP address to access right ubuntu machine 
    value: { get_attr: [ ubr_floating_ip,  floating_ip_address ] }
